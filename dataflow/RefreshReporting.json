{
	"name": "RefreshReporting",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AirbnbTable",
						"type": "DatasetReference"
					},
					"name": "ReadPostingData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TopHostsTable",
						"type": "DatasetReference"
					},
					"name": "WriteTopHosts"
				},
				{
					"dataset": {
						"referenceName": "TopNeighborhood",
						"type": "DatasetReference"
					},
					"name": "WriteTopNeighborhoods"
				},
				{
					"dataset": {
						"referenceName": "Top10NeighborhoodPostings",
						"type": "DatasetReference"
					},
					"name": "WriteTop10NeighborhoodPostings"
				}
			],
			"transformations": [
				{
					"name": "TopHosts"
				},
				{
					"name": "SortMostReviews"
				},
				{
					"name": "TopNeighborhood"
				},
				{
					"name": "SortMostReviewsForNeighborhood"
				},
				{
					"name": "GetTopPostingByNeighborhood"
				},
				{
					"name": "FilterForTop10Postings"
				}
			],
			"script": "source(output(\n\t\tid as integer,\n\t\tlatitude as decimal(10,0),\n\t\tlongitude as decimal(10,0),\n\t\tprice as float,\n\t\tminimum_nights as integer,\n\t\tnumber_of_reviews as integer,\n\t\tlast_review as date,\n\t\treviews_per_month as float,\n\t\tcalculated_host_listings_count as integer,\n\t\tavailability_365 as integer,\n\t\tname as string,\n\t\thost as string,\n\t\tneightborhood as string,\n\t\troom as string,\n\t\thost_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ReadPostingData\nReadPostingData aggregate(groupBy(host_id,\n\t\thost),\n\tmin_price = min(price),\n\t\tmax_price = max(price),\n\t\tavg_price = round(avg(price), 2),\n\t\ttotal_reviews = sum(number_of_reviews),\n\t\tavg_availability = round(avg(availability_365), 2)) ~> TopHosts\nTopHosts sort(desc(total_reviews, true)) ~> SortMostReviews\nReadPostingData aggregate(groupBy(neightborhood),\n\ttotal_reviews = sum(number_of_reviews),\n\t\tmin_price = min(price),\n\t\tmax_price = max(price),\n\t\tavg_price = round(avg(price), 2),\n\t\tavg_availability = round(avg(availability_365), 2)) ~> TopNeighborhood\nTopNeighborhood sort(desc(total_reviews, true)) ~> SortMostReviewsForNeighborhood\nReadPostingData window(over(neightborhood),\n\tdesc(number_of_reviews, true),\n\tRank = rank()) ~> GetTopPostingByNeighborhood\nGetTopPostingByNeighborhood filter(Rank<=10) ~> FilterForTop10Postings\nSortMostReviews sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> WriteTopHosts\nSortMostReviewsForNeighborhood sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> WriteTopNeighborhoods\nFilterForTop10Postings sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> WriteTop10NeighborhoodPostings"
		}
	}
}