{
	"name": "Airbnb",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AirbnbData",
						"type": "DatasetReference"
					},
					"name": "ReadAirbnbData"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "CleanNameHostNameNeighborhoodRoom"
				}
			],
			"script": "source(output(\n\t\tid as integer,\n\t\tname as string,\n\t\thost_id as integer,\n\t\thost_name as string,\n\t\tneighbourhood_group as string,\n\t\tneighbourhood as string,\n\t\tlatitude as decimal(10,0),\n\t\tlongitude as decimal(10,0),\n\t\troom_type as string,\n\t\tprice as float,\n\t\tminimum_nights as integer,\n\t\tnumber_of_reviews as integer,\n\t\tlast_review as date 'MM/dd/yyyy',\n\t\treviews_per_month as float,\n\t\tcalculated_host_listings_count as integer,\n\t\tavailability_365 as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ReadAirbnbData\nReadAirbnbData derive(name_clean = lower(regexReplace(name, '[^A-Za-z0-9]|(  +)', ' ')),\n\t\thost_name_clean = lower(regexReplace(host_name, '[^A-Za-z]|(  +)', ' ')),\n\t\tneightborhood_clean = lower(regexReplace(neighbourhood, '[^A-Za-z0-9]|(  +)', ' ')),\n\t\troom_type_clean = lower(regexReplace(room_type, '[^A-Za-z0-9]|(  +)', ' '))) ~> CleanNameHostNameNeighborhoodRoom"
		}
	}
}